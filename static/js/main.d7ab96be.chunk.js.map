{"version":3,"sources":["ContactForm/ContactForm.js","ContactList/ContactListItem/ContactListItem.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactForm/ContactForm.module.css","ContactList/ContactList.module.css"],"names":["ContactForm","contacts","addContact","useState","name","setName","number","setNumber","handleChange","target","value","action","onSubmit","evt","preventDefault","existingContact","find","contact","alert","className","styles","form","type","pattern","title","required","onChange","submitButton","ContactListItem","id","deleteContact","onClick","ContactList","searchName","contactList","filter","toLowerCase","includes","map","Filter","App","setContacts","setFilter","useEffect","parseContacts","JSON","parse","localStorage","getItem","setItem","stringify","prevContacts","uuidv4","e","length","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+PAIe,SAASA,EAAT,GAAgD,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC9C,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OAAQA,EAAOL,MACb,IAAK,OACHC,EAAQI,EAAOC,OACf,MACF,IAAK,SACHH,EAAUE,EAAOC,OACjB,MACF,QACE,SAmBN,OACE,uBAAMC,OAAO,GAAGC,SAjBG,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAkBd,EAASe,MAAK,SAAAC,GACpC,OAAOA,EAAQb,OAASA,KAGtBW,EACFG,MAAMH,EAAgBX,KAAO,6BAG/BF,EAAW,CAAEE,OAAME,WACnBD,EAAQ,IACRE,EAAU,MAI8BY,UAAWC,IAAOC,KAA1D,UACE,yCAEE,uBACEC,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAON,EACPsB,SAAUlB,OAGd,uBACA,2CAEE,uBACEc,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRb,MAAOJ,EACPkB,MAAM,giBACNC,UAAQ,EACRC,SAAUlB,OAGd,uBAEA,wBAAQc,KAAK,SAASH,UAAWC,IAAOO,aAAxC,4B,YCnDSC,EAdS,SAAC,GAAyC,IAAvCxB,EAAsC,EAAtCA,KAAME,EAAgC,EAAhCA,OAAQuB,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cAI3C,OACE,+BACG1B,EADH,KACWE,EAAQ,IACjB,wBAAQgB,KAAK,SAASS,QANP,WACjBD,EAAcD,IAKZ,wB,gBCJS,SAASG,EAAT,GAA+D,IAAxC/B,EAAuC,EAAvCA,SAAUgC,EAA6B,EAA7BA,WAAYH,EAAiB,EAAjBA,cAM1D,OACE,oBAAIX,UAAWC,IAAOc,YAAtB,SALOjC,EAASkC,QAAO,YACrB,OADmC,EAAX/B,KACZgC,cAAcC,SAASJ,EAAWG,kBAK7BE,KAAI,gBAAGT,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACnB,cAAC,EAAD,CAEEF,KAAMA,EACNE,OAAQA,EACRwB,cAAeA,EACfD,GAAIA,GAJCA,QCbf,IAceU,EAdA,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KAChB,OACE,0DAEE,uBACEM,KAAK,OACLlB,KAAK,SACLmB,QAAQ,yHACRC,MAAM,kcACNE,SAAUV,QCHH,SAASwB,IACtB,MAAgCrC,mBAAS,IAAzC,mBAAOF,EAAP,KAAiBwC,EAAjB,KACA,EAA4BtC,mBAAS,IAArC,mBAAOgC,EAAP,KAAeO,EAAf,KA0BA,OAVAC,qBAAU,WACR,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,aAClDJ,GACFH,EAAYG,KAEb,IACHD,qBAAU,WACRI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUjD,MAC/C,CAACA,IAGF,sBAAKkB,UAAU,YAAf,UACE,2CACA,cAACnB,EAAD,CAAaC,SAAUA,EAAUC,WA3BlB,SAAAe,GACjBwB,GAAY,SAAAU,GAAY,4BACnBA,GADmB,4BAEjBlC,GAFiB,IAERY,GAAIuB,wBAyBlB,0CACA,cAAC,EAAD,CAAQpC,KAvBQ,SAAAqC,GAClBX,EAAUW,EAAE5C,OAAOC,UAwBhBT,EAASqD,OAAS,GACjB,cAACtB,EAAD,CACE/B,SAAUA,EACVgC,WAAYE,EACZL,cA1Bc,SAAAD,GACpBY,GAAY,SAAAU,GAAY,OACtBA,EAAahB,QAAO,SAAAlB,GAAO,OAAIA,EAAQY,KAAOA,c,YChBpD0B,IAASC,OAAO,cAAChB,EAAD,IAASiB,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,aAAe,oC,kBCAlED,EAAOC,QAAU,CAAC,YAAc,oC","file":"static/js/main.d7ab96be.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactForm({ contacts, addContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = ({ target }) => {\r\n    switch (target.name) {\r\n      case 'name':\r\n        setName(target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const existingContact = contacts.find(contact => {\r\n      return contact.name === name;\r\n    });\r\n\r\n    if (existingContact) {\r\n      alert(existingContact.name + ' is already in contacts.');\r\n      return;\r\n    }\r\n    addContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit} className={styles.form}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          value={number}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <button type=\"submit\" className={styles.submitButton}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","const ContactListItem = ({ name, number, id, deleteContact }) => {\r\n  const deleteItem = () => {\r\n    deleteContact(id);\r\n  };\r\n  return (\r\n    <li>\r\n      {name}: {number}{' '}\r\n      <button type=\"button\" onClick={deleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from './ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, searchName, deleteContact }) {\r\n  const filteredNames = () => {\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(searchName.toLowerCase());\r\n    });\r\n  };\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredNames().map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          deleteContact={deleteContact}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","const Filter = ({ find }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={find}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = contact => {\r\n    setContacts(prevContacts => [\r\n      ...prevContacts,\r\n      { ...contact, id: uuidv4() },\r\n    ]);\r\n  };\r\n  const findContact = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const deleteContact = id => {\r\n    setContacts(prevContacts =>\r\n      prevContacts.filter(contact => contact.id !== id),\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const parseContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parseContacts) {\r\n      setContacts(parseContacts);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div className=\"phonebook\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm contacts={contacts} addContact={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter find={findContact} />\r\n\r\n      {contacts.length > 0 && (\r\n        <ContactList\r\n          contacts={contacts}\r\n          searchName={filter}\r\n          deleteContact={deleteContact}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3wyMI\",\"submitButton\":\"ContactForm_submitButton__2k3cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2IAbJ\"};"],"sourceRoot":""}