{"version":3,"sources":["ContactList/ContactList.module.css","ContactForm/ContactForm.js","ContactList/ContactListItem/ContactListItem.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","evt","preventDefault","existingContact","props","contacts","find","contact","alert","addContact","this","action","onSubmit","className","styles","form","type","pattern","title","required","onChange","submitButton","Component","ContactListItem","id","deleteContact","onClick","ContactList","filteredNames","searchName","filter","toLowerCase","includes","contactList","map","Filter","App","prev","uuidv4","findContact","e","parseContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc51bcef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2IAbJ\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const existingContact = this.props.contacts.find(contact => {\r\n      return contact.name === this.state.name;\r\n    });\r\n\r\n    if (existingContact) {\r\n      alert(existingContact.name + ' is already in contacts.');\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form action=\"\" onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            value={number}\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\" className={styles.submitButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\nconst ContactListItem = ({ name, number, id, deleteContact }) => {\r\n  const deleteItem = () => {\r\n    deleteContact(id);\r\n  };\r\n  return (\r\n    <li>\r\n      {name}: {number}{' '}\r\n      <button type=\"button\" onClick={deleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { Component } from 'react';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  filteredNames = () => {\r\n    const { contacts, searchName } = this.props;\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(searchName.toLowerCase());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { deleteContact } = this.props;\r\n    return (\r\n      <ul className={styles.contactList}>\r\n        {this.filteredNames().map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            deleteContact={deleteContact}\r\n            id={id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ find }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={find}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = contact => {\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\r\n    }));\r\n  };\r\n  findContact = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n  deleteContact = id => {\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parseContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phonebook\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          contacts={this.state.contacts}\r\n          addContact={this.addContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter find={this.findContact} />\r\n\r\n        {this.state.contacts.length > 0 && (\r\n          <ContactList\r\n            contacts={this.state.contacts}\r\n            searchName={this.state.filter}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3wyMI\",\"submitButton\":\"ContactForm_submitButton__2k3cw\"};"],"sourceRoot":""}